{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","exact","path","elements","prevExpenses","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b8fbbe7.chunk.js","sourcesContent":["import './Card.css'\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n\r\n    return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n    \r\n    const dropdownChangeHandler = event => {               \r\n        props.onChangeFilter(event.target.value);              \r\n    };\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import \"./ExpenseItem.css\"\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from '../UI/Card';\r\n\r\nconst ExpenseItem = (props) => {   \r\n\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      {/* <div>{props.date.toISOString()}</div> */}\r\n      <ExpenseDate date={props.date}/>  {/*passing data of date from ExpenseItem to ExpenseDate */}\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n        \r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import './ExpensesList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpensesList = (props) => {\r\nif(props.items.length === 0)\r\n{\r\n    return <h2 className = \"expenses-list__fallback\"> Found no expenses for the selected year</h2>;\r\n}\r\nreturn (\r\n  <ul className = \"expenses-list\">\r\n    {props.items.map(expense=>(\r\n    <ExpenseItem\r\n    key = {expense.id} //to let react know where to add the items in a list we give a unique key\r\n    title={expense.title}\r\n    amount={expense.amount}\r\n    date={expense.date} />\r\n  ))}\r\n\r\n  </ul>\r\n  \r\n  );\r\n};\r\n\r\nexport default ExpensesList;","import './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\nlet barFillHeight = \"0%\";\r\nif(props.maxValue > 0)\r\n{\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n}\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" \r\n                style = {{height : barFillHeight}}></div>                \r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>)\r\n};\r\n\r\nexport default ChartBar;","\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\nreturn(\r\n    <div className = \"chart\">\r\n        {props.dataPoints.map(dataPoint => \r\n        <ChartBar \r\n        key={dataPoint.label}\r\n        value={dataPoint.value} \r\n        maxValue={totalMaximum} \r\n        label={dataPoint.label}/>)}\r\n    </div>)\r\n};\r\n\r\nexport default Chart;","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n    const chartDataPoints = [\r\n        {label:'Jan' , value:0},\r\n        {label:'Feb' , value:0},\r\n        {label:'Mar' , value:0},\r\n        {label:'Apr' , value:0},\r\n        {label:'May' , value:0},\r\n        {label:'Jun' , value:0},\r\n        {label:'Jul' , value:0},\r\n        {label:'Aug' , value:0},\r\n        {label:'Sep' , value:0},\r\n        {label:'Oct' , value:0},\r\n        {label:'Nov' , value:0},\r\n        {label:'Dec' , value:0},\r\n\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth(); //starting at 0 => January => 0\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints = {chartDataPoints}/>\r\n\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react'\r\nimport './Expenses.css'\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\n\r\nconst Expenses = (props) =>{  \r\n  const [filteredYear,setFilteredYear] = useState('2020');\r\nconst filterChangeHandler = (selectedYear)=>{\r\n  setFilteredYear(selectedYear);\r\n\r\n}\r\nconst filteredExpenses = props.items.filter((expense) => {\r\n  return expense.date.getFullYear().toString() === filteredYear;\r\n})\r\n// To output conditional list based on filtered year\r\n// let expensesContent = <p>No expense content for the year {filteredYear}.</p>\r\n// if(props.items.length > 0)\r\n// {\r\n//   expensesContent = props.items.map(expense=>(\r\n//     <ExpenseItem\r\n//     key = {expense.id} //to let react know where to add the items in a list we give a unique key\r\n//     title={expense.title}\r\n//     amount={expense.amount}\r\n//     date={expense.date} />\r\n//   ))\r\n// }\r\n\r\n\r\n    return (\r\n      <li>\r\n       \r\n        <Card className=\"expenses\">\r\n        <ExpensesFilter selected={filteredYear} onChangeFilter = {filterChangeHandler}/>\r\n        <ExpensesChart expenses = {filteredExpenses} />\r\n        {/* Rendering List Items statically */}\r\n             {/* <ExpenseItem\r\n        title={props.items[0].title}\r\n        amount={props.items[0].amount}\r\n        date={props.items[0].date}\r\n      />\r\n       <ExpenseItem\r\n        title={props.items[1].title}\r\n        amount={props.items[1].amount}\r\n        date={props.items[1].date}\r\n      />\r\n       <ExpenseItem\r\n         title={props.items[2].title}\r\n         amount={props.items[2].amount}\r\n         date={props.items[2].date}\r\n      />\r\n       <ExpenseItem\r\n         title={props.items[3].title}\r\n         amount={props.items[3].amount}\r\n         date={props.items[3].date}\r\n      /> */}\r\n\r\n      {/* Rendering list items dynamically */}\r\n      {/* {props.items.map(expense=>(\r\n        <ExpenseItem\r\n        key = {expense.id} //to let react know where to add the items in a list we give a unique key\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date} />\r\n      ))} */}\r\n\r\n\r\n      {/* Render dynamic list data based on filtered year */}\r\n      {/* {filteredExpenses.map(expense=>(\r\n        <ExpenseItem\r\n        key = {expense.id} //to let react know where to add the items in a list we give a unique key\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date} />\r\n      ))} */}\r\n\r\n      {/* to render conditional content */}\r\n      <ExpensesList items={filteredExpenses} />\r\n        </Card>\r\n        </li>\r\n        \r\n        );\r\n}\r\n\r\nexport default Expenses;","import React, {useState} from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n    // Multi State approach\r\n    const [enteredTitle,setEnteredTitle] = useState('');\r\n    const [enteredAmount,setEnteredAmount] = useState('');\r\n    const [enteredDate,setEnteredDate] = useState('');    \r\n    const titleChangeHandler = (event) => {\r\n       setEnteredTitle(event.target.value);        \r\n    };\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);        \r\n    };\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);        \r\n    };\r\n\r\n    // single state approach\r\n   \r\n    //  const amountChangeHandler = (event) => {\r\n    //      setEnteredAmount(event.target.value);        \r\n    //  };\r\n    //  const dateChangeHandler = (event) => {\r\n    //      setEnteredDate(event.target.value);        \r\n    //  };\r\n    // const [userInput,setUserInput] = useState({\r\n    //     enteredTitle: '',\r\n    //     enteredAmount: '',\r\n    //     enteredDate:'' });\r\n     // const titleChangeHandler = (event) => {\r\n    //     setUserInput(prevState)=>{\r\n    //     return {...prevState,enteredTitle:event.target.value}; };};   \r\n    // const amountChangeHandler = (event) => {\r\n    //     setUserInput(prevState)=>{\r\n    //     return {...prevState,enteredAmount:event.target.value}; };};   \r\n    // const dateChangeHandler = (event) => {\r\n    //     setUserInput(prevState)=>{\r\n    //     return {...prevState,enteredDate:event.target.value}; };};   \r\n    \r\n    \r\n    //To handle Form Submission\r\n    const submitHandler=(event)=>{\r\n        event.preventDefault(); //prevents from reloading the form when submitted\r\n        const expenseData = {\r\n            title:enteredTitle,\r\n            amount: +enteredAmount,\r\n            date:new Date(enteredDate)\r\n        };\r\n        props.onSaveExpenseData(expenseData); //passing expense data to NewExpense.js\r\n        //clearing the valjue of input fields after form submission\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n        \r\n        };\r\n        \r\n  \r\n\r\n    \r\n\r\n    \r\n    return (\r\n       <form onSubmit={submitHandler} >\r\n           <div className = \"new-expense__controls\">\r\n               <div className = \"new-expense__control\">\r\n                   <label>Title</label>\r\n                   {/* 2 way binding using value={enteredTitle} */}\r\n                   <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} /> \r\n               </div> \r\n               <div className = \"new-expense__control\">\r\n                   <label>Amount</label>\r\n                   {/* 2 way binding using value={enteredAmount} */}\r\n                   <input type=\"number\" value={enteredAmount} min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler}/> \r\n               </div>\r\n               <div className = \"new-expense__control\">\r\n                   <label>Date</label>\r\n                   {/* // 2 way binding using value={enteredDate} */}\r\n                   <input type=\"date\" value = {enteredDate} min = \"2019-01-01\" max = \"2022-12-31\" onChange={dateChangeHandler}/> \r\n               </div>   \r\n           </div>\r\n           <div className = \"new-expense__actions\">\r\n               <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n               <button type=\"submit\">Add Expense</button>               \r\n           </div>\r\n       </form>\r\n    );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n    const saveExpenseDataHandler = enteredExpenseData => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id:Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);//passing expense data to app.js\r\n        setIsEditing(false);\r\n\r\n    };\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const startEditingHandler = (event) =>{\r\n        setIsEditing(true);\r\n    }\r\n    const stopEditingHandler = (event) => {\r\n        setIsEditing(false);\r\n    }\r\n\r\n    return(\r\n        <div className=\"new-expense\">\r\n            {!isEditing && <button type=\"button\" onClick={startEditingHandler}>Add Expense</button>}\r\n            {isEditing && <ExpenseForm onSaveExpenseData = {saveExpenseDataHandler} onCancel = {stopEditingHandler}/>}\r\n        </div>);\r\n\r\n}\r\n\r\nexport default NewExpense;","import React, { useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport ExpensesData from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\n// dummy data\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n  return (\n    <div>\n      <Routes>\n        <Route\n          exact\n          path=\"/home\"\n          elements={\n            <>\n              <NewExpense onAddExpense={addExpenseHandler} />\n              <ExpensesData items={expenses} />{\" \"}\n            </>\n          }\n        />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}